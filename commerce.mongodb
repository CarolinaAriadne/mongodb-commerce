

//  db.produtos.find({});

// 2 - // db.produtos.find({},{_id: 0,
// // nome: 1,
// // vendidos: 1}).sort({vendidos:1});

// 3- db.produtos.find({}, 
// {_id:0, nome:1, vendidos:1}).sort({vendidos: -1}).limit(1);

// 4 - db.produtos.find({ vendidos: { $gt: 50, $lt: 100 } },
//    { _id: 0, nome: 1, vendidos: 1 }).sort({ vendidos: 1 });

//  5 - db.produtos.find({ $or: [{ curtidas: { $eq: 36 } },
//   { vendidos: { $eq: 85 } }] }, 
//   { _id: 0, nome: 1, curtidas: 1, vendidos: 1 });

//  6 - db.produtos.find({$and:[{curtidas:{$gt:10}},
//  {curtidas:{$lt:100}}]},
//   { _id: 0, nome: 1, curtidas: 1});

// 7 - db.produtos.find({$and:[{vendidos:{$ne:50}},
//  {tags:{$exists: false}}]},
//   { _id: 0, nome: 1, vendidos: 1});

// 8 - db.produtos.deleteMany({ curtidas: { $lt: 50 } }, 
// );
// db.produtos.find({});


// 9 - db.produtos.find({valoresNutricionais:
//  {$elemMatch:{tipo: "calorias", quantidade:{$lt:500}}}},
//   { _id: 0, nome: 1});

//  10 - db.produtos.find({valoresNutricionais:{$elemMatch:{tipo: "proteínas",
//  percentual:{$gte:30, $lte: 40} }}
//  }, { _id: 0, nome: 1});

// 11 - db.produtos.find({nome:{$nin: ["Big Mac", "McChicken"]}}, { _id: 0, nome: 1, curtidas: 1, vendidos: 1});


// 12 - db.produtos.updateMany({nome:{$ne: "McChicken"}}, {$addToSet:{ingredientes: "ketchup"}});
// db.produtos.find({}, { _id: 0, nome: 1, ingredientes: 1});

// 13 - db.produtos.updateMany({}, {$set:{ criadoPor: "Ronald McDonald"}});
// db.produtos.find({},{ _id: 0, nome: 1, criadoPor: 1});

//  14 - db.produtos.find({ingredientes:{$all: ["picles"]}}, {valoresNutricionais:{$slice:3}, nome:1, ingredientes: 1, _id: 0})

//  15 - db.produtos.updateMany({}, { $set: { avaliacao: 0 }});
// db.produtos.updateMany({ tags:{$elemMatch:{$eq:"bovino"}},
// },
// { $inc: { avaliacao: 5 },
// });
// db.produtos.updateMany({ tags:{$elemMatch:{$eq:"ave"}},
// }, 
// { $inc: { avaliacao: 3 },
// });
// db.produtos.find({}, { _id: 0, nome: 1, avaliacao: 1 });


//  16 - db.produtos.updateOne({nome: "Big Mac"},{$currentDate:{ultimaModificacao:{$type: "timestamp"}}} );
// db.produtos.find({ultimaModificacao:{$exists: true}},{ _id: 0, nome: 1});

// 17 - const lengthProdutos = db.produtos.countDocuments({});
// db.resumoProdutos.insertOne({franquia: "McDonalds", totalProdutos:lengthProdutos});
// db.resumoProdutos.find({}, {_id: 0, franquia: 1, totalProdutos: 1});

use("commerce");

db.produtos.updateMany({
    nome:
    {$in: ["Big Mac", "Quarteirão com Queijo"]}}, {$push: {ingredientes: "bacon"}});

db.produtos.find({}, { _id: 0, nome: 1, ingredientes: 1});    